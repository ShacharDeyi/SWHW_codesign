<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2134.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="2117" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2117" > </text>
<g id="frames">
<g >
<title>PyGen_NewWithQualName (561,296,207 samples, 0.03%)</title><rect x="302.5" y="2021" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="305.53" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6,419,963,713 samples, 0.32%)</title><rect x="304.8" y="1733" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1743.5" ></text>
</g>
<g >
<title>gen_new_with_qualname (267,876,147 samples, 0.01%)</title><rect x="343.5" y="2021" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="346.51" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5,411,152,447 samples, 0.27%)</title><rect x="304.8" y="1125" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1135.5" ></text>
</g>
<g >
<title>PyFrame_BlockSetup (366,344,938 samples, 0.02%)</title><rect x="116.2" y="2037" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="119.19" y="2047.5" ></text>
</g>
<g >
<title>property_descr_get.lto_priv.0 (523,661,512 samples, 0.03%)</title><rect x="805.0" y="2037" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="807.97" y="2047.5" ></text>
</g>
<g >
<title>tuple_iter.lto_priv.0 (719,940,572 samples, 0.04%)</title><rect x="1044.4" y="2053" width="0.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1047.38" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (239,836,955 samples, 0.01%)</title><rect x="950.8" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.76" y="2047.5" ></text>
</g>
<g >
<title>_Py_Dealloc (1,504,270,845 samples, 0.07%)</title><rect x="948.4" y="2053" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="951.39" y="2063.5" ></text>
</g>
<g >
<title>[python3.10d] (863,302,291 samples, 0.04%)</title><rect x="104.3" y="2053" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="107.27" y="2063.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_O.lto_priv.0 (815,411,283 samples, 0.04%)</title><rect x="967.6" y="2053" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="970.60" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,481,612,659 samples, 0.27%)</title><rect x="304.8" y="1157" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1167.5" ></text>
</g>
<g >
<title>_PyEval_MakeFrameVector (19,069,655,762 samples, 0.95%)</title><rect x="885.0" y="2053" width="11.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="887.95" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (6,758,630,060 samples, 0.34%)</title><rect x="304.8" y="1845" width="4.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.79" y="1855.5" ></text>
</g>
<g >
<title>PyDict_Contains (9,231,986,416 samples, 0.46%)</title><rect x="106.8" y="2037" width="5.4" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="109.79" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (2,557,991,853 samples, 0.13%)</title><rect x="582.9" y="2037" width="1.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="585.93" y="2047.5" ></text>
</g>
<g >
<title>tuple_alloc (4,512,406,819 samples, 0.22%)</title><rect x="834.5" y="2037" width="2.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="837.54" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FromId (288,989,092 samples, 0.01%)</title><rect x="320.1" y="2021" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="323.09" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6,392,245,051 samples, 0.32%)</title><rect x="304.8" y="1717" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1727.5" ></text>
</g>
<g >
<title>[unknown] (4,489,549,242 samples, 0.22%)</title><rect x="304.8" y="661" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="671.5" ></text>
</g>
<g >
<title>PyLong_AsSsize_t (251,487,359 samples, 0.01%)</title><rect x="124.5" y="2037" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="127.48" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,464,017,834 samples, 0.27%)</title><rect x="304.8" y="1141" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1151.5" ></text>
</g>
<g >
<title>vgetargskeywords (1,809,403,086 samples, 0.09%)</title><rect x="1188.8" y="2053" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1191.84" y="2063.5" ></text>
</g>
<g >
<title>PyObject_Free (912,108,567 samples, 0.05%)</title><rect x="132.1" y="2037" width="0.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="135.05" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Malloc (835,517,641 samples, 0.04%)</title><rect x="77.5" y="2053" width="0.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="80.52" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,504,667,034 samples, 0.22%)</title><rect x="304.8" y="677" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="687.5" ></text>
</g>
<g >
<title>lookdict (52,355,672,770 samples, 2.60%)</title><rect x="984.5" y="2053" width="30.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="987.52" y="2063.5" >lo..</text>
</g>
<g >
<title>PyObject_Hash (234,033,240,423 samples, 11.63%)</title><rect x="142.5" y="2037" width="137.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="145.55" y="2047.5" >PyObject_Hash</text>
</g>
<g >
<title>PyBool_FromLong (558,904,795 samples, 0.03%)</title><rect x="105.5" y="2037" width="0.3" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="108.45" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (3,762,308,134 samples, 0.19%)</title><rect x="558.3" y="2037" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="561.33" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugMalloc (3,194,832,394 samples, 0.16%)</title><rect x="912.7" y="2053" width="1.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="915.69" y="2063.5" ></text>
</g>
<g >
<title>super_getattro.lto_priv.0 (2,908,200,451 samples, 0.14%)</title><rect x="830.6" y="2037" width="1.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="833.60" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Malloc (1,068,954,492 samples, 0.05%)</title><rect x="280.4" y="2037" width="0.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="283.43" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (8,636,374,046 samples, 0.43%)</title><rect x="304.8" y="2021" width="5.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="2031.5" ></text>
</g>
<g >
<title>math_gcd (1,457,175,319 samples, 0.07%)</title><rect x="798.8" y="2037" width="0.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="801.78" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (427,442,341 samples, 0.02%)</title><rect x="809.7" y="1957" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.74" y="1967.5" ></text>
</g>
<g >
<title>untrack_tuples (265,975,954 samples, 0.01%)</title><rect x="306.1" y="37" width="0.2" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="309.13" y="47.5" ></text>
</g>
<g >
<title>_PyType_Lookup (13,074,047,556 samples, 0.65%)</title><rect x="591.6" y="2037" width="7.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="594.63" y="2047.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (19,936,162,685 samples, 0.99%)</title><rect x="86.3" y="2053" width="11.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="89.32" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (360,982,699 samples, 0.02%)</title><rect x="527.4" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.44" y="2015.5" ></text>
</g>
<g >
<title>min_max (2,154,829,573 samples, 0.11%)</title><rect x="800.8" y="2037" width="1.3" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="803.82" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (1,389,987,826 samples, 0.07%)</title><rect x="585.3" y="2037" width="0.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="588.35" y="2047.5" ></text>
</g>
<g >
<title>convertitem (392,743,795 samples, 0.02%)</title><rect x="338.5" y="2021" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="341.45" y="2031.5" ></text>
</g>
<g >
<title>gen_dealloc.lto_priv.0 (3,984,715,520 samples, 0.20%)</title><rect x="341.2" y="2021" width="2.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="344.18" y="2031.5" ></text>
</g>
<g >
<title>PyNumber_Add (171,959,182 samples, 0.01%)</title><rect x="28.3" y="2053" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="31.32" y="2063.5" ></text>
</g>
<g >
<title>builtin_sum (980,841,246 samples, 0.05%)</title><rect x="957.9" y="2053" width="0.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="960.94" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,754,169,245 samples, 0.19%)</title><rect x="304.8" y="149" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="159.5" ></text>
</g>
<g >
<title>[unknown] (5,597,029,867 samples, 0.28%)</title><rect x="304.8" y="1205" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1215.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (10,534,577,193 samples, 0.52%)</title><rect x="837.8" y="2037" width="6.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="840.78" y="2047.5" ></text>
</g>
<g >
<title>tupleiter_next.lto_priv.0 (394,924,605 samples, 0.02%)</title><rect x="869.2" y="2037" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="872.23" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (1,946,356,757 samples, 0.10%)</title><rect x="570.7" y="2037" width="1.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="573.71" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (295,047,477 samples, 0.01%)</title><rect x="309.4" y="2005" width="0.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="312.43" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (4,686,298,013 samples, 0.23%)</title><rect x="304.8" y="789" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="799.5" ></text>
</g>
<g >
<title>[unknown] (345,844,621 samples, 0.02%)</title><rect x="527.5" y="1989" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.45" y="1999.5" ></text>
</g>
<g >
<title>PyNumber_Multiply (2,658,467,121 samples, 0.13%)</title><rect x="128.7" y="2037" width="1.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="131.70" y="2047.5" ></text>
</g>
<g >
<title>PyObject_SetItem (297,695,918 samples, 0.01%)</title><rect x="98.1" y="2053" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="101.10" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (9,659,148,427 samples, 0.48%)</title><rect x="571.9" y="2037" width="5.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="574.92" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,077,540,045 samples, 0.35%)</title><rect x="304.8" y="1877" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1887.5" ></text>
</g>
<g >
<title>get_dict_state (468,346,256 samples, 0.02%)</title><rect x="708.6" y="2037" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="711.57" y="2047.5" ></text>
</g>
<g >
<title>map_next.lto_priv.0 (991,862,409 samples, 0.05%)</title><rect x="1031.9" y="2053" width="0.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1034.89" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (256,891,083 samples, 0.01%)</title><rect x="13.5" y="2037" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="16.49" y="2047.5" ></text>
</g>
<g >
<title>PyCallable_Check (435,621,619 samples, 0.02%)</title><rect x="106.1" y="2037" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="109.13" y="2047.5" ></text>
</g>
<g >
<title>tupletraverse.lto_priv.0 (606,613,919 samples, 0.03%)</title><rect x="873.5" y="2037" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="876.51" y="2047.5" ></text>
</g>
<g >
<title>[python3.10d] (2,419,758,441 samples, 0.12%)</title><rect x="300.9" y="2037" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="303.88" y="2047.5" ></text>
</g>
<g >
<title>PyFunction_NewWithQualName (5,527,230,611 samples, 0.27%)</title><rect x="116.4" y="2037" width="3.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="119.40" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (14,437,757,285 samples, 0.72%)</title><rect x="921.7" y="2053" width="8.5" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="924.69" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,819,469,073 samples, 0.24%)</title><rect x="304.8" y="885" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="895.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (2,146,359,155 samples, 0.11%)</title><rect x="536.2" y="2037" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="539.23" y="2047.5" ></text>
</g>
<g >
<title>_PyStack_UnpackDict_Free (176,180,871 samples, 0.01%)</title><rect x="587.4" y="2037" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="590.38" y="2047.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (520,812,914 samples, 0.03%)</title><rect x="967.3" y="2053" width="0.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="970.29" y="2063.5" ></text>
</g>
<g >
<title>insert_to_emptydict (1,451,952,510 samples, 0.07%)</title><rect x="713.2" y="2037" width="0.8" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="716.20" y="2047.5" ></text>
</g>
<g >
<title>_PyTuple_FromArray (480,923,940 samples, 0.02%)</title><rect x="591.1" y="2037" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="594.14" y="2047.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (378,501,016 samples, 0.02%)</title><rect x="127.3" y="2037" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="130.27" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (330,720,200 samples, 0.02%)</title><rect x="527.5" y="1973" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.46" y="1983.5" ></text>
</g>
<g >
<title>_Py_Dealloc (3,458,640,305 samples, 0.17%)</title><rect x="609.9" y="2037" width="2.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="612.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,895,235,295 samples, 0.19%)</title><rect x="304.8" y="245" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="255.5" ></text>
</g>
<g >
<title>_PyObject_IsFreed (1,571,242,264 samples, 0.08%)</title><rect x="581.8" y="2037" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="584.75" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (472,434,864 samples, 0.02%)</title><rect x="809.7" y="1973" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.71" y="1983.5" ></text>
</g>
<g >
<title>object_isinstance (704,669,332 samples, 0.04%)</title><rect x="1034.0" y="2053" width="0.5" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1037.04" y="2063.5" ></text>
</g>
<g >
<title>clear_slots (1,321,848,668 samples, 0.07%)</title><rect x="968.2" y="2053" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="971.24" y="2063.5" ></text>
</g>
<g >
<title>vgetargs1_impl (3,074,995,617 samples, 0.15%)</title><rect x="1187.0" y="2053" width="1.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1190.03" y="2063.5" ></text>
</g>
<g >
<title>dictiter_iternextitem.lto_priv.0 (1,167,779,303 samples, 0.06%)</title><rect x="661.0" y="2037" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="664.03" y="2047.5" ></text>
</g>
<g >
<title>supercheck (725,346,405 samples, 0.04%)</title><rect x="833.3" y="2037" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="836.29" y="2047.5" ></text>
</g>
<g >
<title>lookup_maybe_method.lto_priv.0 (797,585,480 samples, 0.04%)</title><rect x="798.2" y="2037" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="801.20" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (299,744,356 samples, 0.01%)</title><rect x="137.4" y="2021" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="140.42" y="2031.5" ></text>
</g>
<g >
<title>object_recursive_isinstance (974,175,299 samples, 0.05%)</title><rect x="1034.5" y="2053" width="0.5" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1037.45" y="2063.5" ></text>
</g>
<g >
<title>_PyType_LookupId (312,252,545 samples, 0.02%)</title><rect x="599.3" y="2037" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="602.29" y="2047.5" ></text>
</g>
<g >
<title>set_lookkey (4,808,809,187 samples, 0.24%)</title><rect x="821.9" y="2037" width="2.8" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="824.89" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,771,911,813 samples, 0.24%)</title><rect x="304.8" y="853" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="863.5" ></text>
</g>
<g >
<title>PySequence_Tuple (324,782,642 samples, 0.02%)</title><rect x="98.5" y="2053" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="101.46" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (1,520,352,515 samples, 0.08%)</title><rect x="311.8" y="2021" width="0.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="314.79" y="2031.5" ></text>
</g>
<g >
<title>lookdict_unicode (1,784,280,453 samples, 0.09%)</title><rect x="789.7" y="2037" width="1.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="792.66" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_ContainsId (2,041,340,775 samples, 0.10%)</title><rect x="348.5" y="2037" width="1.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="351.45" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GC_UnTrack (3,207,136,130 samples, 0.16%)</title><rect x="133.3" y="2037" width="1.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="136.33" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (702,001,064 samples, 0.03%)</title><rect x="303.6" y="2021" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="306.60" y="2031.5" ></text>
</g>
<g >
<title>python3-dbg (1,038,966,050 samples, 0.05%)</title><rect x="10.2" y="2069" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.22" y="2079.5" ></text>
</g>
<g >
<title>_PyEval_BuiltinsFromGlobals (452,414,840 samples, 0.02%)</title><rect x="884.7" y="2053" width="0.2" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="887.65" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,792,049,007 samples, 0.24%)</title><rect x="304.8" y="869" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="879.5" ></text>
</g>
<g >
<title>[unknown] (5,066,614,436 samples, 0.25%)</title><rect x="304.8" y="965" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="975.5" ></text>
</g>
<g >
<title>_PyFrame_New_NoTrack (9,690,954,327 samples, 0.48%)</title><rect x="896.5" y="2053" width="5.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="899.50" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.6 (209,090,166 samples, 0.01%)</title><rect x="316.2" y="2021" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="319.19" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6,286,663,438 samples, 0.31%)</title><rect x="304.8" y="1669" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1679.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (826,177,802 samples, 0.04%)</title><rect x="884.2" y="2053" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="887.16" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,406,474,202 samples, 0.22%)</title><rect x="304.8" y="581" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="591.5" ></text>
</g>
<g >
<title>PyObject_IsTrue (306,248,118 samples, 0.02%)</title><rect x="280.2" y="2037" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="283.19" y="2047.5" ></text>
</g>
<g >
<title>vgetargs1 (239,096,171 samples, 0.01%)</title><rect x="878.1" y="2037" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="881.08" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,683,621,208 samples, 0.18%)</title><rect x="304.8" y="101" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="111.5" ></text>
</g>
<g >
<title>vectorcall_maybe.lto_priv.0 (914,406,891 samples, 0.05%)</title><rect x="877.5" y="2037" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="880.53" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_LookupSpecial (420,404,135 samples, 0.02%)</title><rect x="582.7" y="2037" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="585.68" y="2047.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (12,792,787,180 samples, 0.64%)</title><rect x="790.7" y="2037" width="7.5" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="793.70" y="2047.5" ></text>
</g>
<g >
<title>frame_dealloc.lto_priv.0 (23,697,875,988 samples, 1.18%)</title><rect x="676.2" y="2037" width="13.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="679.22" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,026,186,271 samples, 0.20%)</title><rect x="304.8" y="325" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="335.5" ></text>
</g>
<g >
<title>PyDict_SetItem (1,550,642,218 samples, 0.08%)</title><rect x="114.5" y="2037" width="0.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="117.45" y="2047.5" ></text>
</g>
<g >
<title>tuplehash.lto_priv.0 (42,521,982,134 samples, 2.11%)</title><rect x="844.1" y="2037" width="24.9" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="847.06" y="2047.5" >t..</text>
</g>
<g >
<title>PyArg_ParseTupleAndKeywords (643,395,949 samples, 0.03%)</title><rect x="10.8" y="2053" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.83" y="2063.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (3,667,717,273 samples, 0.18%)</title><rect x="902.2" y="2053" width="2.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="905.18" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (695,077,886 samples, 0.03%)</title><rect x="313.4" y="2021" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="316.41" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5,836,088,958 samples, 0.29%)</title><rect x="304.8" y="1317" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1327.5" ></text>
</g>
<g >
<title>PyObject_GenericSetAttr (208,797,963 samples, 0.01%)</title><rect x="135.5" y="2037" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="138.53" y="2047.5" ></text>
</g>
<g >
<title>allocate_from_new_pool (302,724,298 samples, 0.02%)</title><rect x="952.3" y="2053" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="955.33" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (237,862,869 samples, 0.01%)</title><rect x="952.4" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="955.37" y="2047.5" ></text>
</g>
<g >
<title>set_contains_key (396,486,523 samples, 0.02%)</title><rect x="821.6" y="2037" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="824.65" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugFree (473,851,101 samples, 0.02%)</title><rect x="310.7" y="2021" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="313.68" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4,285,561,143 samples, 0.21%)</title><rect x="304.8" y="501" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="511.5" ></text>
</g>
<g >
<title>tuple_subtype_new (239,127,568 samples, 0.01%)</title><rect x="837.6" y="2037" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="840.64" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,132,836,912 samples, 0.35%)</title><rect x="304.8" y="1893" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1903.5" ></text>
</g>
<g >
<title>[unknown] (4,386,323,460 samples, 0.22%)</title><rect x="304.8" y="565" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="575.5" ></text>
</g>
<g >
<title>_PyEval_Vector (630,630,375 samples, 0.03%)</title><rect x="896.1" y="2053" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="899.13" y="2063.5" ></text>
</g>
<g >
<title>builtin_max (712,357,269 samples, 0.04%)</title><rect x="641.1" y="2037" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="644.08" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,094,313,640 samples, 0.25%)</title><rect x="304.8" y="981" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="991.5" ></text>
</g>
<g >
<title>binary_iop1 (1,541,051,640 samples, 0.08%)</title><rect x="632.2" y="2037" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="635.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,029,709,005 samples, 0.35%)</title><rect x="304.8" y="1861" width="4.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.77" y="1871.5" ></text>
</g>
<g >
<title>get_gc_state (244,870,556 samples, 0.01%)</title><rect x="982.4" y="2053" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="985.36" y="2063.5" ></text>
</g>
<g >
<title>gen_dealloc.lto_priv.0 (403,997,145 samples, 0.02%)</title><rect x="975.3" y="2053" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="978.28" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (295,339,663 samples, 0.01%)</title><rect x="527.5" y="1957" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.48" y="1967.5" ></text>
</g>
<g >
<title>[unknown] (5,506,743,704 samples, 0.27%)</title><rect x="304.8" y="1173" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1183.5" ></text>
</g>
<g >
<title>[unknown] (4,320,838,424 samples, 0.21%)</title><rect x="304.8" y="533" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="543.5" ></text>
</g>
<g >
<title>[unknown] (188,871,124 samples, 0.01%)</title><rect x="950.8" y="2021" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.79" y="2031.5" ></text>
</g>
<g >
<title>unpack_stack (341,432,208 samples, 0.02%)</title><rect x="1177.7" y="2053" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1180.69" y="2063.5" ></text>
</g>
<g >
<title>PyArg_ParseTuple (1,037,047,016 samples, 0.05%)</title><rect x="104.8" y="2037" width="0.6" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="107.83" y="2047.5" ></text>
</g>
<g >
<title>__GI___fstatat64 (239,836,955 samples, 0.01%)</title><rect x="950.8" y="2053" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="953.76" y="2063.5" ></text>
</g>
<g >
<title>lsb_release (201,882,094 samples, 0.01%)</title><rect x="10.1" y="2069" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.10" y="2079.5" ></text>
</g>
<g >
<title>PyTuple_New (2,429,569,792 samples, 0.12%)</title><rect x="295.2" y="2037" width="1.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="298.16" y="2047.5" ></text>
</g>
<g >
<title>pymalloc_pool_extend (1,337,799,207 samples, 0.07%)</title><rect x="809.2" y="2037" width="0.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="812.20" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,808,425,852 samples, 0.29%)</title><rect x="304.8" y="1301" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (6,274,062,372 samples, 0.31%)</title><rect x="304.8" y="1653" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1663.5" ></text>
</g>
<g >
<title>PyObject_CallFinalizerFromDealloc (237,480,505 samples, 0.01%)</title><rect x="303.3" y="2021" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="306.27" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (5,994,618,149 samples, 0.30%)</title><rect x="304.8" y="1413" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1423.5" ></text>
</g>
<g >
<title>_PyTrash_cond (2,046,321,836 samples, 0.10%)</title><rect x="588.9" y="2037" width="1.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="591.89" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,497,905,875 samples, 0.32%)</title><rect x="304.8" y="1765" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.81" y="1775.5" ></text>
</g>
<g >
<title>[unknown] (5,325,834,071 samples, 0.26%)</title><rect x="304.8" y="1077" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1087.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (563,647,907 samples, 0.03%)</title><rect x="115.7" y="2037" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="118.65" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,089,126,634 samples, 0.20%)</title><rect x="304.8" y="357" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="367.5" ></text>
</g>
<g >
<title>gen_send_ex2 (25,693,738,747 samples, 1.28%)</title><rect x="693.4" y="2037" width="15.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="696.43" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GetIter (704,913,009 samples, 0.04%)</title><rect x="29.4" y="2053" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="32.42" y="2063.5" ></text>
</g>
<g >
<title>PyObject_CallFinalizer (321,048,225 samples, 0.02%)</title><rect x="130.3" y="2037" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="133.34" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (178,655,217 samples, 0.01%)</title><rect x="311.0" y="2021" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="313.96" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (175,672,519 samples, 0.01%)</title><rect x="952.4" y="1989" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="955.40" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (176,746,331 samples, 0.01%)</title><rect x="950.8" y="1957" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.80" y="1967.5" ></text>
</g>
<g >
<title>subtype_dealloc.lto_priv.0 (425,418,151 samples, 0.02%)</title><rect x="1041.5" y="2053" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1044.46" y="2063.5" ></text>
</g>
<g >
<title>builtin_sum_impl (767,908,452 samples, 0.04%)</title><rect x="641.7" y="2037" width="0.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="644.72" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_New (950,716,109 samples, 0.05%)</title><rect x="101.0" y="2053" width="0.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="104.01" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,539,461,241 samples, 0.28%)</title><rect x="304.8" y="1189" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1199.5" ></text>
</g>
<g >
<title>vgetargs1_impl (606,342,352 samples, 0.03%)</title><rect x="878.2" y="2037" width="0.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="881.23" y="2047.5" ></text>
</g>
<g >
<title>_PyGILState_GetThisThreadState (2,362,977,844 samples, 0.12%)</title><rect x="904.3" y="2053" width="1.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="907.33" y="2063.5" ></text>
</g>
<g >
<title>find_name_in_mro.lto_priv.0 (188,257,859 samples, 0.01%)</title><rect x="971.5" y="2053" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="974.52" y="2063.5" ></text>
</g>
<g >
<title>clear_slots (193,882,277 samples, 0.01%)</title><rect x="646.6" y="2037" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="649.58" y="2047.5" ></text>
</g>
<g >
<title>PyIter_Next (10,432,933,992 samples, 0.52%)</title><rect x="20.5" y="2053" width="6.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="23.51" y="2063.5" ></text>
</g>
<g >
<title>_PyDict_LoadGlobal (1,532,406,574 samples, 0.08%)</title><rect x="351.2" y="2037" width="0.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="354.17" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (558,485,009 samples, 0.03%)</title><rect x="901.8" y="2037" width="0.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="904.84" y="2047.5" ></text>
</g>
<g >
<title>_PyStack_AsDict (239,187,173 samples, 0.01%)</title><rect x="316.3" y="2021" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="319.31" y="2031.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (971,762,041 samples, 0.05%)</title><rect x="12.9" y="2053" width="0.5" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="15.88" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (7,308,782,381 samples, 0.36%)</title><rect x="304.8" y="1941" width="4.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1951.5" ></text>
</g>
<g >
<title>address_in_range (1,746,671,806 samples, 0.09%)</title><rect x="625.4" y="2037" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="628.39" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,180,890,345 samples, 0.31%)</title><rect x="304.8" y="1573" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1583.5" ></text>
</g>
<g >
<title>binary_op (317,096,929 samples, 0.02%)</title><rect x="957.2" y="2053" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="960.20" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,215,000,696 samples, 0.21%)</title><rect x="304.8" y="437" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="447.5" ></text>
</g>
<g >
<title>arena_map_get (2,076,624,505 samples, 0.10%)</title><rect x="626.6" y="2037" width="1.3" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="629.64" y="2047.5" ></text>
</g>
<g >
<title>object_init.lto_priv.0 (559,074,933 samples, 0.03%)</title><rect x="804.1" y="2037" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="807.09" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,251,395,627 samples, 0.31%)</title><rect x="304.8" y="1637" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1647.5" ></text>
</g>
<g >
<title>PyErr_Occurred (887,960,096 samples, 0.04%)</title><rect x="13.7" y="2053" width="0.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="16.70" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (252,890,520 samples, 0.01%)</title><rect x="279.6" y="2021" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="282.62" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6,354,631,859 samples, 0.32%)</title><rect x="304.8" y="1701" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1711.5" ></text>
</g>
<g >
<title>float_richcompare.lto_priv.0 (431,743,500 samples, 0.02%)</title><rect x="973.9" y="2053" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="976.94" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,739,061,511 samples, 0.19%)</title><rect x="304.8" y="133" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="143.5" ></text>
</g>
<g >
<title>[unknown] (190,788,083 samples, 0.01%)</title><rect x="952.4" y="2021" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="955.39" y="2031.5" ></text>
</g>
<g >
<title>untrack_dicts (217,269,909 samples, 0.01%)</title><rect x="306.0" y="37" width="0.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="309.00" y="47.5" ></text>
</g>
<g >
<title>[unknown] (6,060,082,464 samples, 0.30%)</title><rect x="304.8" y="1461" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1471.5" ></text>
</g>
<g >
<title>builtin_isinstance (256,625,314 samples, 0.01%)</title><rect x="640.8" y="2037" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="643.84" y="2047.5" ></text>
</g>
<g >
<title>PyNumber_InPlaceAdd (1,264,021,235 samples, 0.06%)</title><rect x="127.7" y="2037" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="130.72" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawRealloc (225,621,708 samples, 0.01%)</title><rect x="563.2" y="2037" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="566.24" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_GetSlice (249,189,954 samples, 0.01%)</title><rect x="295.0" y="2037" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="298.01" y="2047.5" ></text>
</g>
<g >
<title>frame_alloc (1,157,124,860 samples, 0.06%)</title><rect x="974.2" y="2053" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="977.23" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (693,168,304 samples, 0.03%)</title><rect x="28.9" y="2053" width="0.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="31.89" y="2063.5" ></text>
</g>
<g >
<title>dict_ass_sub.lto_priv.0 (285,171,877 samples, 0.01%)</title><rect x="648.7" y="2037" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="651.70" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (3,969,621,008 samples, 0.20%)</title><rect x="579.3" y="2037" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="582.35" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,445,038,625 samples, 0.32%)</title><rect x="304.8" y="1749" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1759.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (614,302,471 samples, 0.03%)</title><rect x="103.8" y="2053" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="106.78" y="2063.5" ></text>
</g>
<g >
<title>_Py_CheckSlotResult (5,371,103,333 samples, 0.27%)</title><rect x="606.7" y="2037" width="3.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="609.71" y="2047.5" ></text>
</g>
<g >
<title>PyObject_SetAttr (1,973,322,359 samples, 0.10%)</title><rect x="282.0" y="2037" width="1.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="285.01" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (971,890,426 samples, 0.05%)</title><rect x="311.2" y="2021" width="0.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="314.22" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4,527,270,255 samples, 0.22%)</title><rect x="304.8" y="709" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="719.5" ></text>
</g>
<g >
<title>_PyTrash_begin (2,385,930,564 samples, 0.12%)</title><rect x="587.5" y="2037" width="1.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="590.49" y="2047.5" ></text>
</g>
<g >
<title>object_recursive_isinstance (467,718,928 samples, 0.02%)</title><rect x="804.7" y="2037" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="807.66" y="2047.5" ></text>
</g>
<g >
<title>PyCMethod_New (579,377,996 samples, 0.03%)</title><rect x="105.8" y="2037" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="108.79" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,238,808,135 samples, 0.31%)</title><rect x="304.8" y="1621" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1631.5" ></text>
</g>
<g >
<title>tupleiter_dealloc.lto_priv.0 (412,923,700 samples, 0.02%)</title><rect x="869.0" y="2037" width="0.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="871.99" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_Pop_KnownHash (455,816,246 samples, 0.02%)</title><rect x="352.5" y="2037" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="355.50" y="2047.5" ></text>
</g>
<g >
<title>do_richcompare (3,519,489,160 samples, 0.17%)</title><rect x="969.4" y="2053" width="2.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="972.43" y="2063.5" ></text>
</g>
<g >
<title>type_getattro.lto_priv.0 (2,151,544,042 samples, 0.11%)</title><rect x="874.8" y="2037" width="1.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="877.76" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (3,592,687,413 samples, 0.18%)</title><rect x="135.7" y="2037" width="2.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="138.65" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_get (2,922,796,049 samples, 0.15%)</title><rect x="98.6" y="2053" width="1.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="101.65" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,839,789,035 samples, 0.19%)</title><rect x="304.8" y="213" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="223.5" ></text>
</g>
<g >
<title>tuplerichcompare.lto_priv.0 (6,019,386,097 samples, 0.30%)</title><rect x="869.5" y="2037" width="3.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="872.46" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,043,962,189 samples, 0.25%)</title><rect x="304.8" y="949" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="959.5" ></text>
</g>
<g >
<title>set_contains_entry (171,671,820 samples, 0.01%)</title><rect x="821.5" y="2037" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="824.54" y="2047.5" ></text>
</g>
<g >
<title>call_function.lto_priv.0 (443,937,455 samples, 0.02%)</title><rect x="965.2" y="2053" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="968.18" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,356,059,703 samples, 0.27%)</title><rect x="304.8" y="1093" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1103.5" ></text>
</g>
<g >
<title>long_richcompare.lto_priv.0 (2,607,384,163 samples, 0.13%)</title><rect x="778.2" y="2037" width="1.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="781.21" y="2047.5" ></text>
</g>
<g >
<title>PyThreadState_Get (1,204,344,250 samples, 0.06%)</title><rect x="284.9" y="2037" width="0.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="287.88" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,705,164,009 samples, 0.28%)</title><rect x="304.8" y="1253" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1263.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (674,115,528 samples, 0.03%)</title><rect x="1176.5" y="2053" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1179.47" y="2063.5" ></text>
</g>
<g >
<title>_PyDict_CheckConsistency (1,332,531,966 samples, 0.07%)</title><rect x="347.7" y="2037" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="350.67" y="2047.5" ></text>
</g>
<g >
<title>type_vectorcall.lto_priv.0 (903,875,511 samples, 0.04%)</title><rect x="1176.9" y="2053" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1179.87" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,917,913,784 samples, 0.19%)</title><rect x="304.8" y="261" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="271.5" ></text>
</g>
<g >
<title>arena_map_is_used (7,318,998,458 samples, 0.36%)</title><rect x="627.9" y="2037" width="4.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="630.86" y="2047.5" ></text>
</g>
<g >
<title>__strchr_avx2_rtm (1,123,766,141 samples, 0.06%)</title><rect x="951.5" y="2053" width="0.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="954.48" y="2063.5" ></text>
</g>
<g >
<title>_PyStack_UnpackDict_Free (1,709,121,052 samples, 0.08%)</title><rect x="316.5" y="2021" width="1.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="319.45" y="2031.5" ></text>
</g>
<g >
<title>method_dealloc.lto_priv.0 (239,192,005 samples, 0.01%)</title><rect x="345.0" y="2021" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="348.03" y="2031.5" ></text>
</g>
<g >
<title>PyObject_SetItem (2,322,210,645 samples, 0.12%)</title><rect x="283.2" y="2037" width="1.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="286.17" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,716,376,053 samples, 0.18%)</title><rect x="304.8" y="117" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="127.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg.lto_priv.13 (2,580,919,755 samples, 0.13%)</title><rect x="130.5" y="2037" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="133.53" y="2047.5" ></text>
</g>
<g >
<title>list_resize (286,694,001 samples, 0.01%)</title><rect x="722.9" y="2037" width="0.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="725.91" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GetItem (7,391,949,121 samples, 0.37%)</title><rect x="137.8" y="2037" width="4.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="140.76" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,417,067,780 samples, 0.37%)</title><rect x="304.8" y="1957" width="4.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1967.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (369,860,812 samples, 0.02%)</title><rect x="918.1" y="2053" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="921.05" y="2063.5" ></text>
</g>
<g >
<title>listiter_next.lto_priv.0 (24,524,394,915 samples, 1.22%)</title><rect x="723.8" y="2037" width="14.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="726.84" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_GetItemHint (854,088,116 samples, 0.04%)</title><rect x="349.7" y="2037" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="352.66" y="2047.5" ></text>
</g>
<g >
<title>_Py_NewReference (5,557,191,411 samples, 0.28%)</title><rect x="611.9" y="2037" width="3.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="614.89" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Free (496,895,461 samples, 0.02%)</title><rect x="28.6" y="2053" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="31.60" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (6,170,840,838 samples, 0.31%)</title><rect x="304.8" y="1541" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1551.5" ></text>
</g>
<g >
<title>[unknown] (7,671,021,518 samples, 0.38%)</title><rect x="304.8" y="1989" width="4.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1999.5" ></text>
</g>
<g >
<title>slot_nb_add (1,767,202,517 samples, 0.09%)</title><rect x="824.8" y="2037" width="1.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="827.78" y="2047.5" ></text>
</g>
<g >
<title>PyMember_SetOne (1,477,592,523 samples, 0.07%)</title><rect x="126.0" y="2037" width="0.8" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="128.96" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (650,536,013 samples, 0.03%)</title><rect x="10.2" y="2053" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.25" y="2063.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms_rtm (358,190,443 samples, 0.02%)</title><rect x="615.3" y="2037" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="618.31" y="2047.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS.lto_priv.0 (1,855,282,271 samples, 0.09%)</title><rect x="645.5" y="2037" width="1.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="648.49" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,153,216,898 samples, 0.31%)</title><rect x="304.8" y="1525" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1535.5" ></text>
</g>
<g >
<title>_PyTuple_FromArray (465,687,180 samples, 0.02%)</title><rect x="939.5" y="2053" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="942.46" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (198,991,629 samples, 0.01%)</title><rect x="29.3" y="2053" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="32.30" y="2063.5" ></text>
</g>
<g >
<title>build_indices (232,956,533 samples, 0.01%)</title><rect x="957.8" y="2053" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="960.78" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_GC_Malloc (186,146,155 samples, 0.01%)</title><rect x="918.5" y="2053" width="0.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="921.47" y="2063.5" ></text>
</g>
<g >
<title>_PyEval_BuiltinsFromGlobals (492,862,124 samples, 0.02%)</title><rect x="352.8" y="2037" width="0.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="355.84" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugFree (2,376,586,681 samples, 0.12%)</title><rect x="556.1" y="2037" width="1.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="559.07" y="2047.5" ></text>
</g>
<g >
<title>PyObject_GenericGetAttr (546,393,347 samples, 0.03%)</title><rect x="135.2" y="2037" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="138.21" y="2047.5" ></text>
</g>
<g >
<title>insert_to_usedpool (1,264,704,003 samples, 0.06%)</title><rect x="714.1" y="2037" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="717.06" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,582,676,489 samples, 0.23%)</title><rect x="304.8" y="773" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="783.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL.lto_priv.0 (2,814,519,025 samples, 0.14%)</title><rect x="965.6" y="2053" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="968.64" y="2063.5" ></text>
</g>
<g >
<title>_PyUnicode_FromId (5,663,130,821 samples, 0.28%)</title><rect x="599.8" y="2037" width="3.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="602.78" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,293,071,132 samples, 0.26%)</title><rect x="304.8" y="1061" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1071.5" ></text>
</g>
<g >
<title>read_size_t (18,873,677,671 samples, 0.94%)</title><rect x="810.2" y="2037" width="11.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="813.24" y="2047.5" ></text>
</g>
<g >
<title>PyDescr_IsData (679,947,387 samples, 0.03%)</title><rect x="106.4" y="2037" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="109.39" y="2047.5" ></text>
</g>
<g >
<title>gc_list_size (561,807,159 samples, 0.03%)</title><rect x="974.9" y="2053" width="0.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="977.95" y="2063.5" ></text>
</g>
<g >
<title>tuple_alloc (536,033,998 samples, 0.03%)</title><rect x="1043.7" y="2053" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1046.72" y="2063.5" ></text>
</g>
<g >
<title>_Py_CheckFunctionResult (6,770,593,249 samples, 0.34%)</title><rect x="943.9" y="2053" width="4.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="946.91" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,770,647,846 samples, 0.29%)</title><rect x="304.8" y="1285" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1295.5" ></text>
</g>
<g >
<title>[unknown] (6,175,852,573 samples, 0.31%)</title><rect x="304.8" y="1557" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1567.5" ></text>
</g>
<g >
<title>[unknown] (4,346,024,786 samples, 0.22%)</title><rect x="304.8" y="549" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="559.5" ></text>
</g>
<g >
<title>_PyLong_GCD (9,577,797,226 samples, 0.48%)</title><rect x="905.7" y="2053" width="5.6" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="908.72" y="2063.5" ></text>
</g>
<g >
<title>malloc (201,148,491 samples, 0.01%)</title><rect x="1031.8" y="2053" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1034.77" y="2063.5" ></text>
</g>
<g >
<title>PyNumber_AsSsize_t (181,661,016 samples, 0.01%)</title><rect x="28.4" y="2053" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="31.42" y="2063.5" ></text>
</g>
<g >
<title>descr_setcheck (365,453,850 samples, 0.02%)</title><rect x="648.5" y="2037" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="651.48" y="2047.5" ></text>
</g>
<g >
<title>binary_op (342,206,833 samples, 0.02%)</title><rect x="633.1" y="2037" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="636.09" y="2047.5" ></text>
</g>
<g >
<title>get_tuple_state (536,667,228 samples, 0.03%)</title><rect x="343.8" y="2021" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="346.80" y="2031.5" ></text>
</g>
<g >
<title>_PyDict_GetItem_KnownHash (503,133,178 samples, 0.02%)</title><rect x="350.9" y="2037" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="353.87" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,865,002,182 samples, 0.19%)</title><rect x="304.8" y="229" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="239.5" ></text>
</g>
<g >
<title>[unknown] (4,708,967,818 samples, 0.23%)</title><rect x="304.8" y="805" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="815.5" ></text>
</g>
<g >
<title>_PyDict_GetItemIdWithError (1,220,199,497 samples, 0.06%)</title><rect x="350.2" y="2037" width="0.7" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="353.16" y="2047.5" ></text>
</g>
<g >
<title>super_init.lto_priv.0 (1,679,633,040 samples, 0.08%)</title><rect x="832.3" y="2037" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="835.30" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,618,306,217 samples, 0.33%)</title><rect x="304.8" y="1813" width="3.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.81" y="1823.5" ></text>
</g>
<g >
<title>[unknown] (4,310,758,208 samples, 0.21%)</title><rect x="304.8" y="517" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="527.5" ></text>
</g>
<g >
<title>lookdict (15,653,781,733 samples, 0.78%)</title><rect x="779.8" y="2037" width="9.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="782.83" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,221,168,221 samples, 0.31%)</title><rect x="304.8" y="1605" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1615.5" ></text>
</g>
<g >
<title>[unknown] (4,421,611,557 samples, 0.22%)</title><rect x="304.8" y="597" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="607.5" ></text>
</g>
<g >
<title>visit_reachable (985,766,203 samples, 0.05%)</title><rect x="306.3" y="37" width="0.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="309.29" y="47.5" ></text>
</g>
<g >
<title>[unknown] (6,024,838,900 samples, 0.30%)</title><rect x="304.8" y="1429" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1439.5" ></text>
</g>
<g >
<title>[unknown] (4,068,994,012 samples, 0.20%)</title><rect x="304.8" y="341" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="351.5" ></text>
</g>
<g >
<title>[unknown] (303,246,211 samples, 0.02%)</title><rect x="809.8" y="1893" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.81" y="1903.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms_rtm (228,913,333 samples, 0.01%)</title><rect x="137.6" y="2021" width="0.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="140.62" y="2031.5" ></text>
</g>
<g >
<title>PyDict_GetItemWithError (3,649,665,118 samples, 0.18%)</title><rect x="112.2" y="2037" width="2.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="115.21" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,451,737,796 samples, 0.22%)</title><rect x="304.8" y="629" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="639.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (259,281,778 samples, 0.01%)</title><rect x="564.2" y="2037" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="567.22" y="2047.5" ></text>
</g>
<g >
<title>long_hash.lto_priv.0 (63,036,480,878 samples, 3.13%)</title><rect x="740.2" y="2037" width="36.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="743.17" y="2047.5" >lon..</text>
</g>
<g >
<title>_PyObject_GC_Alloc (347,404,455 samples, 0.02%)</title><rect x="918.3" y="2053" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="921.27" y="2063.5" ></text>
</g>
<g >
<title>PyMethod_New (427,302,306 samples, 0.02%)</title><rect x="126.8" y="2037" width="0.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="129.83" y="2047.5" ></text>
</g>
<g >
<title>set_contains.lto_priv.0 (219,751,151 samples, 0.01%)</title><rect x="821.4" y="2037" width="0.1" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="824.42" y="2047.5" ></text>
</g>
<g >
<title>slot_tp_new (289,396,504 samples, 0.01%)</title><rect x="1041.3" y="2053" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1044.27" y="2063.5" ></text>
</g>
<g >
<title>tuple_get_empty (672,100,383 samples, 0.03%)</title><rect x="837.2" y="2037" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="840.19" y="2047.5" ></text>
</g>
<g >
<title>func_clear.lto_priv.0 (2,763,233,653 samples, 0.14%)</title><rect x="339.0" y="2021" width="1.6" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="341.95" y="2031.5" ></text>
</g>
<g >
<title>PyLong_AsLong (450,581,365 samples, 0.02%)</title><rect x="123.4" y="2037" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="126.45" y="2047.5" ></text>
</g>
<g >
<title>meth_dealloc.lto_priv.0 (419,470,745 samples, 0.02%)</title><rect x="799.9" y="2037" width="0.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="802.92" y="2047.5" ></text>
</g>
<g >
<title>func_dealloc.lto_priv.0 (1,025,860,913 samples, 0.05%)</title><rect x="340.6" y="2021" width="0.6" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="343.57" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (4,257,830,430 samples, 0.21%)</title><rect x="304.8" y="469" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="479.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate (244,012,032 samples, 0.01%)</title><rect x="930.2" y="2053" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="933.19" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,876,251,751 samples, 0.29%)</title><rect x="304.8" y="1349" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1359.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (297,658,765,330 samples, 14.79%)</title><rect x="353.1" y="2037" width="174.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="356.13" y="2047.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>_PyMem_DebugFree (385,456,314 samples, 0.02%)</title><rect x="912.5" y="2053" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="915.46" y="2063.5" ></text>
</g>
<g >
<title>long_mul.lto_priv.0 (1,616,168,844 samples, 0.08%)</title><rect x="777.2" y="2037" width="0.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="780.20" y="2047.5" ></text>
</g>
<g >
<title>list_iter.lto_priv.0 (2,305,307,856 samples, 0.11%)</title><rect x="721.5" y="2037" width="1.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="724.51" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,097,847,940 samples, 0.30%)</title><rect x="304.8" y="1493" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1503.5" ></text>
</g>
<g >
<title>[unknown] (186,355,188 samples, 0.01%)</title><rect x="950.8" y="2005" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.79" y="2015.5" ></text>
</g>
<g >
<title>convertitem (183,661,318 samples, 0.01%)</title><rect x="969.0" y="2053" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="972.02" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (183,874,166 samples, 0.01%)</title><rect x="950.8" y="1989" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.79" y="1999.5" ></text>
</g>
<g >
<title>cleanreturn (264,230,521 samples, 0.01%)</title><rect x="968.1" y="2053" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="971.08" y="2063.5" ></text>
</g>
<g >
<title>make_coro (988,385,397 samples, 0.05%)</title><rect x="344.3" y="2021" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="347.28" y="2031.5" ></text>
</g>
<g >
<title>PyThread_tss_get (2,309,389,918 samples, 0.11%)</title><rect x="285.6" y="2037" width="1.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="288.60" y="2047.5" ></text>
</g>
<g >
<title>_PyEval_Vector (6,317,757,512 samples, 0.31%)</title><rect x="531.8" y="2037" width="3.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="534.83" y="2047.5" ></text>
</g>
<g >
<title>insertdict (6,301,504,890 samples, 0.31%)</title><rect x="714.8" y="2037" width="3.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="717.80" y="2047.5" ></text>
</g>
<g >
<title>call_function.lto_priv.0 (3,077,389,465 samples, 0.15%)</title><rect x="642.2" y="2037" width="1.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="645.20" y="2047.5" ></text>
</g>
<g >
<title>get_gc_state (521,741,514 samples, 0.03%)</title><rect x="709.0" y="2037" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="712.05" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,635,762,818 samples, 0.18%)</title><rect x="304.8" y="69" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="79.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.14 (515,960,585 samples, 0.03%)</title><rect x="937.5" y="2053" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="940.47" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GetIter (775,497,454 samples, 0.04%)</title><rect x="142.1" y="2037" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="145.09" y="2047.5" ></text>
</g>
<g >
<title>new_dict (1,062,016,052 samples, 0.05%)</title><rect x="802.3" y="2037" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="805.34" y="2047.5" ></text>
</g>
<g >
<title>update_refs (787,429,833 samples, 0.04%)</title><rect x="1178.0" y="2053" width="0.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1180.98" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugCheckAddress (30,428,761,181 samples, 1.51%)</title><rect x="538.2" y="2037" width="17.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="541.23" y="2047.5" ></text>
</g>
<g >
<title>gen_new_with_qualname (3,385,070,616 samples, 0.17%)</title><rect x="691.4" y="2037" width="2.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="694.44" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,240,258,637 samples, 0.26%)</title><rect x="304.8" y="1029" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1039.5" ></text>
</g>
<g >
<title>[unknown] (4,746,743,808 samples, 0.24%)</title><rect x="304.8" y="837" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="847.5" ></text>
</g>
<g >
<title>[unknown] (4,225,060,648 samples, 0.21%)</title><rect x="304.8" y="453" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="463.5" ></text>
</g>
<g >
<title>call_function.lto_priv.0 (29,542,262,291 samples, 1.47%)</title><rect x="321.1" y="2021" width="17.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="324.10" y="2031.5" ></text>
</g>
<g >
<title>_PyNumber_Index (1,201,246,920 samples, 0.06%)</title><rect x="563.5" y="2037" width="0.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="566.45" y="2047.5" ></text>
</g>
<g >
<title>PyFloat_FromDouble (5,032,352,061 samples, 0.25%)</title><rect x="14.2" y="2053" width="3.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="17.23" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,664,848,055 samples, 0.28%)</title><rect x="304.8" y="1237" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1247.5" ></text>
</g>
<g >
<title>PyObject_GC_Del (1,240,583,218 samples, 0.06%)</title><rect x="132.6" y="2037" width="0.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="135.59" y="2047.5" ></text>
</g>
<g >
<title>PyType_GenericAlloc (3,647,830,100 samples, 0.18%)</title><rect x="101.6" y="2053" width="2.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="104.57" y="2063.5" ></text>
</g>
<g >
<title>lookdict_unicode_nodummy (25,576,852,226 samples, 1.27%)</title><rect x="1016.8" y="2053" width="15.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1019.77" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,436,606,158 samples, 0.22%)</title><rect x="304.8" y="613" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="623.5" ></text>
</g>
<g >
<title>PyIter_Check (250,027,985 samples, 0.01%)</title><rect x="20.4" y="2053" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="23.36" y="2063.5" ></text>
</g>
<g >
<title>unicode_hash.lto_priv.0 (358,431,874 samples, 0.02%)</title><rect x="1177.5" y="2053" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.46" y="2063.5" ></text>
</g>
<g >
<title>PyCallable_Check (1,953,132,785 samples, 0.10%)</title><rect x="11.7" y="2053" width="1.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="14.70" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,534,823,961 samples, 0.23%)</title><rect x="304.8" y="725" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="735.5" ></text>
</g>
<g >
<title>[unknown] (446,703,106 samples, 0.02%)</title><rect x="527.4" y="2021" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.39" y="2031.5" ></text>
</g>
<g >
<title>defdict_missing.lto_priv.0 (181,351,816 samples, 0.01%)</title><rect x="648.1" y="2037" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="651.14" y="2047.5" ></text>
</g>
<g >
<title>arena_map_get (7,931,589,846 samples, 0.39%)</title><rect x="952.5" y="2053" width="4.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="955.52" y="2063.5" ></text>
</g>
<g >
<title>object_dealloc.lto_priv.0 (467,945,200 samples, 0.02%)</title><rect x="803.8" y="2037" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="806.75" y="2047.5" ></text>
</g>
<g >
<title>_PyDict_Next (601,840,877 samples, 0.03%)</title><rect x="352.1" y="2037" width="0.3" height="15.0" fill="rgb(250,209,49)" rx="2" ry="2" />
<text  x="355.10" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,786,894,828 samples, 0.19%)</title><rect x="304.8" y="181" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="191.5" ></text>
</g>
<g >
<title>_PyLong_New (1,887,772,467 samples, 0.09%)</title><rect x="911.3" y="2053" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="914.34" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,766,750,251 samples, 0.19%)</title><rect x="304.8" y="165" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="175.5" ></text>
</g>
<g >
<title>[unknown] (1,327,557,510,542 samples, 65.96%)</title><rect x="104.8" y="2053" width="778.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="107.77" y="2063.5" >[unknown]</text>
</g>
<g >
<title>[unknown] (7,200,651,100 samples, 0.36%)</title><rect x="304.8" y="1909" width="4.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1919.5" ></text>
</g>
<g >
<title>PyArg_UnpackTuple (224,667,584 samples, 0.01%)</title><rect x="11.2" y="2053" width="0.1" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="14.21" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_LookupAttr (725,063,844 samples, 0.04%)</title><rect x="312.9" y="2021" width="0.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="315.93" y="2031.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawAlloc (4,396,577,094 samples, 0.22%)</title><rect x="914.6" y="2053" width="2.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="917.56" y="2063.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (442,575,462 samples, 0.02%)</title><rect x="901.6" y="2037" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="904.57" y="2047.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (754,359,966 samples, 0.04%)</title><rect x="951.0" y="2053" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="954.01" y="2063.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (6,684,205,266 samples, 0.33%)</title><rect x="805.3" y="2037" width="3.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="808.28" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,730,344,493 samples, 0.28%)</title><rect x="304.8" y="1269" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1279.5" ></text>
</g>
<g >
<title>[unknown] (4,466,866,411 samples, 0.22%)</title><rect x="304.8" y="645" width="2.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="655.5" ></text>
</g>
<g >
<title>[unknown] (510,024,054 samples, 0.03%)</title><rect x="809.7" y="1989" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.69" y="1999.5" ></text>
</g>
<g >
<title>PyGILState_Check (4,740,103,906 samples, 0.24%)</title><rect x="119.6" y="2037" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="122.64" y="2047.5" ></text>
</g>
<g >
<title>fast_floor_div (2,757,349,129 samples, 0.14%)</title><rect x="666.7" y="2037" width="1.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="669.75" y="2047.5" ></text>
</g>
<g >
<title>PyLong_FromLongLong (953,922,672 samples, 0.05%)</title><rect x="125.3" y="2037" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="128.33" y="2047.5" ></text>
</g>
<g >
<title>func_descr_get.lto_priv.0 (266,854,706 samples, 0.01%)</title><rect x="691.0" y="2037" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="694.04" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (742,004,738 samples, 0.04%)</title><rect x="809.6" y="2021" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.55" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (3,817,129,081 samples, 0.19%)</title><rect x="304.8" y="197" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="207.5" ></text>
</g>
<g >
<title>_PyTuple_FromArray (3,868,288,405 samples, 0.19%)</title><rect x="317.5" y="2021" width="2.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="320.47" y="2031.5" ></text>
</g>
<g >
<title>_Py_CheckFunctionResult (6,014,897,806 samples, 0.30%)</title><rect x="603.2" y="2037" width="3.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="606.18" y="2047.5" ></text>
</g>
<g >
<title>listiter_dealloc.lto_priv.0 (1,038,464,384 samples, 0.05%)</title><rect x="723.2" y="2037" width="0.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="726.23" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,109,280,283 samples, 0.20%)</title><rect x="304.8" y="373" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="383.5" ></text>
</g>
<g >
<title>[unknown] (6,688,403,819 samples, 0.33%)</title><rect x="304.8" y="1829" width="3.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.80" y="1839.5" ></text>
</g>
<g >
<title>tuple_get_empty (594,935,955 samples, 0.03%)</title><rect x="1044.0" y="2053" width="0.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1047.03" y="2063.5" ></text>
</g>
<g >
<title>tuple_alloc (1,863,974,962 samples, 0.09%)</title><rect x="345.5" y="2021" width="1.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="348.47" y="2031.5" ></text>
</g>
<g >
<title>dict_subscript.lto_priv.0 (18,066,085,775 samples, 0.90%)</title><rect x="650.4" y="2037" width="10.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="653.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (184,412,015 samples, 0.01%)</title><rect x="1163.2" y="2021" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1166.20" y="2031.5" ></text>
</g>
<g >
<title>float_add.lto_priv.0 (751,008,622 samples, 0.04%)</title><rect x="668.6" y="2037" width="0.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="671.57" y="2047.5" ></text>
</g>
<g >
<title>PyThread_tss_is_created (1,110,408,483 samples, 0.06%)</title><rect x="100.4" y="2053" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="103.36" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,517,197,336 samples, 0.22%)</title><rect x="304.8" y="693" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="703.5" ></text>
</g>
<g >
<title>binary_op1 (642,204,791 samples, 0.03%)</title><rect x="957.4" y="2053" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="960.39" y="2063.5" ></text>
</g>
<g >
<title>float_richcompare.lto_priv.0 (621,512,516 samples, 0.03%)</title><rect x="673.7" y="2037" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="676.67" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (179,348,425 samples, 0.01%)</title><rect x="1163.2" y="2005" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1166.20" y="2015.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (436,455,513 samples, 0.02%)</title><rect x="599.5" y="2037" width="0.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="602.50" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (185,744,710 samples, 0.01%)</title><rect x="952.4" y="2005" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="955.40" y="2015.5" ></text>
</g>
<g >
<title>_Py_NewReference (2,497,102,112 samples, 0.12%)</title><rect x="949.3" y="2053" width="1.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="952.28" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_FastCallDictTstate (501,008,959 samples, 0.02%)</title><rect x="564.4" y="2037" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="567.38" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,164,706,992 samples, 0.21%)</title><rect x="304.8" y="405" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="415.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (1,135,335,213 samples, 0.06%)</title><rect x="281.1" y="2037" width="0.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="284.08" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Hash (81,318,018,987 samples, 4.04%)</title><rect x="29.8" y="2053" width="47.7" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="32.83" y="2063.5" >PyOb..</text>
</g>
<g >
<title>tuplegetter_descr_get.lto_priv.0 (299,526,994 samples, 0.01%)</title><rect x="1045.3" y="2053" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1048.31" y="2063.5" ></text>
</g>
<g >
<title>PyList_Append (339,518,371 samples, 0.02%)</title><rect x="123.2" y="2037" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="126.23" y="2047.5" ></text>
</g>
<g >
<title>is_tstate_valid.lto_priv.0 (4,428,161,725 samples, 0.22%)</title><rect x="718.6" y="2037" width="2.6" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="721.57" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,037,428,505 samples, 0.30%)</title><rect x="304.8" y="1445" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1455.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (531,938,694 samples, 0.03%)</title><rect x="304.9" y="37" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="307.94" y="47.5" ></text>
</g>
<g >
<title>[unknown] (4,003,509,053 samples, 0.20%)</title><rect x="304.8" y="309" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="319.5" ></text>
</g>
<g >
<title>long_div.lto_priv.0 (966,725,485 samples, 0.05%)</title><rect x="739.6" y="2037" width="0.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="742.57" y="2047.5" ></text>
</g>
<g >
<title>get_float_state (343,282,628 samples, 0.02%)</title><rect x="708.8" y="2037" width="0.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="711.84" y="2047.5" ></text>
</g>
<g >
<title>super_dealloc.lto_priv.0 (873,694,535 samples, 0.04%)</title><rect x="830.1" y="2037" width="0.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="833.09" y="2047.5" ></text>
</g>
<g >
<title>unicode_hash.lto_priv.0 (2,276,809,824 samples, 0.11%)</title><rect x="876.1" y="2037" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="879.12" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,172,279,076 samples, 0.26%)</title><rect x="304.8" y="1013" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1023.5" ></text>
</g>
<g >
<title>PyThread_tss_is_created (973,782,303 samples, 0.05%)</title><rect x="287.0" y="2037" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="289.95" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,965,709,480 samples, 0.20%)</title><rect x="304.8" y="293" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="303.5" ></text>
</g>
<g >
<title>PyMem_Free (324,617,521 samples, 0.02%)</title><rect x="303.0" y="2021" width="0.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="305.98" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (6,525,625,179 samples, 0.32%)</title><rect x="304.8" y="1781" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.81" y="1791.5" ></text>
</g>
<g >
<title>list_dealloc.lto_priv.0 (457,975,016 samples, 0.02%)</title><rect x="721.2" y="2037" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="724.19" y="2047.5" ></text>
</g>
<g >
<title>convertsimple (1,701,596,472 samples, 0.08%)</title><rect x="647.1" y="2037" width="1.0" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="650.08" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,568,448,794 samples, 0.33%)</title><rect x="304.8" y="1797" width="3.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.81" y="1807.5" ></text>
</g>
<g >
<title>gen_iternext.lto_priv.0 (356,687,448 samples, 0.02%)</title><rect x="691.2" y="2037" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="694.23" y="2047.5" ></text>
</g>
<g >
<title>method_get.lto_priv.0 (372,325,442 samples, 0.02%)</title><rect x="800.2" y="2037" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="803.21" y="2047.5" ></text>
</g>
<g >
<title>_PyLong_New (296,983,104 samples, 0.01%)</title><rect x="538.1" y="2037" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="541.05" y="2047.5" ></text>
</g>
<g >
<title>tupleiter_next.lto_priv.0 (1,014,828,355 samples, 0.05%)</title><rect x="1163.5" y="2053" width="0.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1166.52" y="2063.5" ></text>
</g>
<g >
<title>PyIter_Next (1,128,859,380 samples, 0.06%)</title><rect x="122.6" y="2037" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="125.57" y="2047.5" ></text>
</g>
<g >
<title>convert_to_double (472,481,743 samples, 0.02%)</title><rect x="646.8" y="2037" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="649.78" y="2047.5" ></text>
</g>
<g >
<title>PyDict_SetItem (412,993,379 samples, 0.02%)</title><rect x="13.5" y="2053" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="16.46" y="2063.5" ></text>
</g>
<g >
<title>map_dealloc.lto_priv.0 (178,775,212 samples, 0.01%)</title><rect x="344.9" y="2021" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="347.86" y="2031.5" ></text>
</g>
<g >
<title>[unknown] (7,842,129,137 samples, 0.39%)</title><rect x="304.8" y="2005" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="2015.5" ></text>
</g>
<g >
<title>[unknown] (5,908,988,545 samples, 0.29%)</title><rect x="304.8" y="1365" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1375.5" ></text>
</g>
<g >
<title>convertsimple (236,724,482 samples, 0.01%)</title><rect x="338.7" y="2021" width="0.1" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="341.68" y="2031.5" ></text>
</g>
<g >
<title>tuplesubscript.lto_priv.0 (668,579,596 samples, 0.03%)</title><rect x="873.1" y="2037" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="876.12" y="2047.5" ></text>
</g>
<g >
<title>visit_decref (798,485,465 samples, 0.04%)</title><rect x="878.6" y="2037" width="0.4" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="881.58" y="2047.5" ></text>
</g>
<g >
<title>map_vectorcall.lto_priv.0 (186,273,078 samples, 0.01%)</title><rect x="1032.5" y="2053" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1035.47" y="2063.5" ></text>
</g>
<g >
<title>PyFrame_BlockPop (348,687,120 samples, 0.02%)</title><rect x="116.0" y="2037" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="118.98" y="2047.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL.lto_priv.0 (767,859,848 samples, 0.04%)</title><rect x="645.0" y="2037" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="648.04" y="2047.5" ></text>
</g>
<g >
<title>get_float_state (1,518,971,053 samples, 0.08%)</title><rect x="981.5" y="2053" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="984.47" y="2063.5" ></text>
</g>
<g >
<title>find_empty_slot (280,232,315 samples, 0.01%)</title><rect x="668.4" y="2037" width="0.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="671.38" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GenericSetAttrWithDict (2,771,737,096 samples, 0.14%)</title><rect x="577.6" y="2037" width="1.6" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="580.58" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (375,393,090 samples, 0.02%)</title><rect x="809.8" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.77" y="1935.5" ></text>
</g>
<g >
<title>[unknown] (4,731,620,505 samples, 0.24%)</title><rect x="304.8" y="821" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="831.5" ></text>
</g>
<g >
<title>[unknown] (6,311,840,208 samples, 0.31%)</title><rect x="304.8" y="1685" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1695.5" ></text>
</g>
<g >
<title>[unknown] (4,945,490,088 samples, 0.25%)</title><rect x="304.8" y="917" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="927.5" ></text>
</g>
<g >
<title>lookdict_split.lto_priv.0 (793,195,197 samples, 0.04%)</title><rect x="1015.2" y="2053" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1018.22" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (207,411,367 samples, 0.01%)</title><rect x="279.6" y="2005" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="282.64" y="2015.5" ></text>
</g>
<g >
<title>new_keys_object.lto_priv.0 (1,338,309,488 samples, 0.07%)</title><rect x="803.0" y="2037" width="0.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="805.96" y="2047.5" ></text>
</g>
<g >
<title>vectorcall_maybe.lto_priv.0 (1,012,585,881 samples, 0.05%)</title><rect x="346.9" y="2021" width="0.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="349.92" y="2031.5" ></text>
</g>
<g >
<title>PyThreadState_Get (586,936,987 samples, 0.03%)</title><rect x="304.1" y="2021" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="307.11" y="2031.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (396,416,940 samples, 0.02%)</title><rect x="281.7" y="2037" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="284.74" y="2047.5" ></text>
</g>
<g >
<title>slot_tp_new (1,837,769,712 samples, 0.09%)</title><rect x="826.0" y="2037" width="1.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="828.98" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (385,360,605 samples, 0.02%)</title><rect x="809.8" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.76" y="1951.5" ></text>
</g>
<g >
<title>_PyTuple_Resize (247,051,108 samples, 0.01%)</title><rect x="591.5" y="2037" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="594.48" y="2047.5" ></text>
</g>
<g >
<title>_PyMem_DebugMalloc (1,472,628,082 samples, 0.07%)</title><rect x="557.5" y="2037" width="0.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="560.46" y="2047.5" ></text>
</g>
<g >
<title>_PyUnicode_FromId (6,833,948,355 samples, 0.34%)</title><rect x="939.9" y="2053" width="4.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="942.89" y="2063.5" ></text>
</g>
<g >
<title>min_max (1,472,564,544 samples, 0.07%)</title><rect x="1033.0" y="2053" width="0.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1035.95" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,912,945,940 samples, 0.24%)</title><rect x="304.8" y="901" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="911.5" ></text>
</g>
<g >
<title>_Py_Dealloc (1,034,859,640 samples, 0.05%)</title><rect x="320.3" y="2021" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="323.27" y="2031.5" ></text>
</g>
<g >
<title>PyNumber_FloorDivide (307,348,792 samples, 0.02%)</title><rect x="127.5" y="2037" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="130.54" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_Size (209,551,951 samples, 0.01%)</title><rect x="296.6" y="2037" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="299.64" y="2047.5" ></text>
</g>
<g >
<title>_PyStack_UnpackDict (1,479,497,709 samples, 0.07%)</title><rect x="586.5" y="2037" width="0.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="589.51" y="2047.5" ></text>
</g>
<g >
<title>builtin_sum_impl (11,370,315,482 samples, 0.56%)</title><rect x="958.5" y="2053" width="6.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="961.51" y="2063.5" ></text>
</g>
<g >
<title>lookdict_index (213,935,867 samples, 0.01%)</title><rect x="789.0" y="2037" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="792.01" y="2047.5" ></text>
</g>
<g >
<title>PySequence_Contains (353,520,086 samples, 0.02%)</title><rect x="284.5" y="2037" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="287.54" y="2047.5" ></text>
</g>
<g >
<title>rangeiter_next.lto_priv.0 (191,365,244 samples, 0.01%)</title><rect x="810.1" y="2037" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="813.12" y="2047.5" ></text>
</g>
<g >
<title>float_mul.lto_priv.0 (6,395,287,249 samples, 0.32%)</title><rect x="669.9" y="2037" width="3.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="672.86" y="2047.5" ></text>
</g>
<g >
<title>builtin_sum (194,716,138 samples, 0.01%)</title><rect x="641.6" y="2037" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="644.61" y="2047.5" ></text>
</g>
<g >
<title>float_dealloc.lto_priv.0 (3,936,399,878 samples, 0.20%)</title><rect x="971.6" y="2053" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="974.63" y="2063.5" ></text>
</g>
<g >
<title>member_set.lto_priv.0 (442,760,431 samples, 0.02%)</title><rect x="799.6" y="2037" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="802.64" y="2047.5" ></text>
</g>
<g >
<title>PyIter_Check (232,309,644 samples, 0.01%)</title><rect x="122.4" y="2037" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="125.43" y="2047.5" ></text>
</g>
<g >
<title>get_small_int.lto_priv.0 (2,540,074,847 samples, 0.13%)</title><rect x="982.5" y="2053" width="1.5" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="985.54" y="2063.5" ></text>
</g>
<g >
<title>PyUnicode_InternInPlace (411,858,703 samples, 0.02%)</title><rect x="304.5" y="2021" width="0.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="307.48" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (12,182,347,699 samples, 0.61%)</title><rect x="930.3" y="2053" width="7.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="933.33" y="2063.5" ></text>
</g>
<g >
<title>tuplehash.lto_priv.0 (200,959,909,637 samples, 9.99%)</title><rect x="1045.5" y="2053" width="117.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1048.49" y="2063.5" >tuplehash.lto_..</text>
</g>
<g >
<title>_PyFunction_Vectorcall (1,097,762,479 samples, 0.05%)</title><rect x="310.0" y="2021" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="313.02" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_GC_Malloc (699,495,049 samples, 0.03%)</title><rect x="570.3" y="2037" width="0.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="573.30" y="2047.5" ></text>
</g>
<g >
<title>get_small_int.lto_priv.0 (3,494,720,872 samples, 0.17%)</title><rect x="709.4" y="2037" width="2.0" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="712.36" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (214,005,114 samples, 0.01%)</title><rect x="624.9" y="2021" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="627.91" y="2031.5" ></text>
</g>
<g >
<title>get_tuple_state (302,481,773 samples, 0.02%)</title><rect x="984.0" y="2053" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="987.03" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (4,192,417,069 samples, 0.21%)</title><rect x="304.8" y="421" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="431.5" ></text>
</g>
<g >
<title>PyErr_Occurred (416,756,608 samples, 0.02%)</title><rect x="115.4" y="2037" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="118.39" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_Free (5,960,031,137 samples, 0.30%)</title><rect x="564.7" y="2037" width="3.5" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="567.68" y="2047.5" ></text>
</g>
<g >
<title>PyObject_Free (317,964,480 samples, 0.02%)</title><rect x="303.4" y="2021" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="306.41" y="2031.5" ></text>
</g>
<g >
<title>PyNumber_Add (317,512,948 samples, 0.02%)</title><rect x="127.1" y="2037" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="130.08" y="2047.5" ></text>
</g>
<g >
<title>object_new.lto_priv.0 (410,566,744 samples, 0.02%)</title><rect x="804.4" y="2037" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="807.42" y="2047.5" ></text>
</g>
<g >
<title>PyLong_FromLongLong (1,024,821,039 samples, 0.05%)</title><rect x="27.6" y="2053" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="30.56" y="2063.5" ></text>
</g>
<g >
<title>_PyEval_MakeFrameVector (7,064,189,708 samples, 0.35%)</title><rect x="527.7" y="2037" width="4.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="530.65" y="2047.5" ></text>
</g>
<g >
<title>PyLong_AsLongAndOverflow (1,305,965,206 samples, 0.06%)</title><rect x="123.7" y="2037" width="0.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="126.71" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,973,207,601 samples, 0.25%)</title><rect x="304.8" y="933" width="2.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="943.5" ></text>
</g>
<g >
<title>[unknown] (5,961,865,816 samples, 0.30%)</title><rect x="304.8" y="1397" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1407.5" ></text>
</g>
<g >
<title>binary_op1 (12,843,965,144 samples, 0.64%)</title><rect x="633.3" y="2037" width="7.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="636.29" y="2047.5" ></text>
</g>
<g >
<title>PyType_IsSubtype (5,963,239,528 samples, 0.30%)</title><rect x="296.9" y="2037" width="3.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="299.87" y="2047.5" ></text>
</g>
<g >
<title>PyTuple_GetItem (12,747,343,491 samples, 0.63%)</title><rect x="287.5" y="2037" width="7.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="290.54" y="2047.5" ></text>
</g>
<g >
<title>method_vectorcall (651,678,045 samples, 0.03%)</title><rect x="800.4" y="2037" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="803.44" y="2047.5" ></text>
</g>
<g >
<title>PyObject_IS_GC (592,414,003 samples, 0.03%)</title><rect x="279.8" y="2037" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="282.77" y="2047.5" ></text>
</g>
<g >
<title>descr_check.lto_priv.0 (397,531,919 samples, 0.02%)</title><rect x="648.3" y="2037" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="651.25" y="2047.5" ></text>
</g>
<g >
<title>write_size_t (6,472,786,092 samples, 0.32%)</title><rect x="879.2" y="2037" width="3.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="882.24" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (532,456,147 samples, 0.03%)</title><rect x="809.7" y="2005" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.68" y="2015.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (516,478,897 samples, 0.03%)</title><rect x="346.6" y="2021" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="349.56" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_GetMethod (191,572,563 samples, 0.01%)</title><rect x="312.8" y="2021" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="315.82" y="2031.5" ></text>
</g>
<g >
<title>get_tuple_state (1,169,569,584 samples, 0.06%)</title><rect x="711.4" y="2037" width="0.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="714.41" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (6,077,713,637 samples, 0.30%)</title><rect x="304.8" y="1477" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (5,929,114,660 samples, 0.29%)</title><rect x="304.8" y="1381" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1391.5" ></text>
</g>
<g >
<title>PyLong_AsDouble (212,356,991 samples, 0.01%)</title><rect x="302.9" y="2021" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="305.86" y="2031.5" ></text>
</g>
<g >
<title>_PyTrash_end (1,794,553,072 samples, 0.09%)</title><rect x="590.1" y="2037" width="1.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="593.09" y="2047.5" ></text>
</g>
<g >
<title>_PyLong_GCD (790,640,620 samples, 0.04%)</title><rect x="537.6" y="2037" width="0.5" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="540.59" y="2047.5" ></text>
</g>
<g >
<title>gen_send_ex2 (2,149,412,194 samples, 0.11%)</title><rect x="980.2" y="2053" width="1.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="983.21" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (194,762,958 samples, 0.01%)</title><rect x="279.7" y="1989" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="282.65" y="1999.5" ></text>
</g>
<g >
<title>[unknown] (4,139,524,419 samples, 0.21%)</title><rect x="304.8" y="389" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="399.5" ></text>
</g>
<g >
<title>python (2,011,079,351,708 samples, 99.93%)</title><rect x="10.8" y="2069" width="1179.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="13.83" y="2079.5" >python</text>
</g>
<g >
<title>lookdict_split.lto_priv.0 (884,876,851 samples, 0.04%)</title><rect x="789.1" y="2037" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="792.14" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.23 (299,589,465 samples, 0.01%)</title><rect x="586.2" y="2037" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="589.25" y="2047.5" ></text>
</g>
<g >
<title>app1 (319,453,591 samples, 0.02%)</title><rect x="626.5" y="2037" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="629.45" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,522,595,364 samples, 0.37%)</title><rect x="304.8" y="1973" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1983.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms_rtm (16,122,981,669 samples, 0.80%)</title><rect x="615.6" y="2037" width="9.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="618.58" y="2047.5" ></text>
</g>
<g >
<title>long_add.lto_priv.0 (1,606,892,216 samples, 0.08%)</title><rect x="738.2" y="2037" width="1.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="741.23" y="2047.5" ></text>
</g>
<g >
<title>PyLong_FromLong (1,208,414,190 samples, 0.06%)</title><rect x="124.6" y="2037" width="0.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="127.63" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (179,194,300 samples, 0.01%)</title><rect x="950.8" y="1973" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="953.80" y="1983.5" ></text>
</g>
<g >
<title>[unknown] (6,125,524,392 samples, 0.30%)</title><rect x="304.8" y="1509" width="3.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1519.5" ></text>
</g>
<g >
<title>[unknown] (5,265,378,455 samples, 0.26%)</title><rect x="304.8" y="1045" width="3.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1055.5" ></text>
</g>
<g >
<title>[unknown] (4,270,434,871 samples, 0.21%)</title><rect x="304.8" y="485" width="2.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="495.5" ></text>
</g>
<g >
<title>_PyFunction_Vectorcall (1,069,207,113 samples, 0.05%)</title><rect x="535.6" y="2037" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="538.61" y="2047.5" ></text>
</g>
<g >
<title>all (2,012,552,475,897 samples, 100%)</title><rect x="10.0" y="2085" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="2095.5" ></text>
</g>
<g >
<title>[unknown] (219,614,103 samples, 0.01%)</title><rect x="527.5" y="1925" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.53" y="1935.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawMalloc (1,297,510,618 samples, 0.06%)</title><rect x="917.2" y="2053" width="0.7" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="920.17" y="2063.5" ></text>
</g>
<g >
<title>get_type_cache.lto_priv.0 (1,309,362,049 samples, 0.07%)</title><rect x="712.1" y="2037" width="0.8" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="715.10" y="2047.5" ></text>
</g>
<g >
<title>tuplerichcompare.lto_priv.0 (20,926,090,011 samples, 1.04%)</title><rect x="1164.1" y="2053" width="12.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1167.12" y="2063.5" ></text>
</g>
<g >
<title>_PyMem_DebugRawFree (4,625,674,772 samples, 0.23%)</title><rect x="560.5" y="2037" width="2.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="563.53" y="2047.5" ></text>
</g>
<g >
<title>lookdict_unicode (1,849,045,728 samples, 0.09%)</title><rect x="1015.7" y="2053" width="1.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1018.69" y="2063.5" ></text>
</g>
<g >
<title>subtype_dealloc.lto_priv.0 (4,664,876,790 samples, 0.23%)</title><rect x="827.3" y="2037" width="2.7" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="830.30" y="2047.5" ></text>
</g>
<g >
<title>PyBool_FromLong (586,092,175 samples, 0.03%)</title><rect x="11.3" y="2053" width="0.4" height="15.0" fill="rgb(249,204,49)" rx="2" ry="2" />
<text  x="14.34" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,632,275,274 samples, 0.28%)</title><rect x="304.8" y="1221" width="3.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1231.5" ></text>
</g>
<g >
<title>cfunction_call.lto_priv.0 (1,675,451,709 samples, 0.08%)</title><rect x="644.1" y="2037" width="0.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="647.05" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,938,000,798 samples, 0.20%)</title><rect x="304.8" y="277" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="287.5" ></text>
</g>
<g >
<title>[unknown] (77,381,821,485 samples, 3.84%)</title><rect x="302.3" y="2037" width="45.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="305.29" y="2047.5" >[unk..</text>
</g>
<g >
<title>PyType_GenericAlloc (183,787,304 samples, 0.01%)</title><rect x="296.8" y="2037" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="299.76" y="2047.5" ></text>
</g>
<g >
<title>excess_args (541,314,514 samples, 0.03%)</title><rect x="666.4" y="2037" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="669.43" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (3,658,420,781 samples, 0.18%)</title><rect x="304.8" y="85" width="2.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="95.5" ></text>
</g>
<g >
<title>[unknown] (262,848,303 samples, 0.01%)</title><rect x="1163.2" y="2037" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1166.16" y="2047.5" ></text>
</g>
<g >
<title>tp_new_wrapper (1,301,446,139 samples, 0.06%)</title><rect x="833.8" y="2037" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="836.77" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (350,800,911 samples, 0.02%)</title><rect x="809.8" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.78" y="1919.5" ></text>
</g>
<g >
<title>long_compare.lto_priv.0 (642,074,219 samples, 0.03%)</title><rect x="739.2" y="2037" width="0.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="742.19" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (5,144,583,940 samples, 0.26%)</title><rect x="304.8" y="997" width="3.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1007.5" ></text>
</g>
<g >
<title>type_call.lto_priv.0 (1,505,558,881 samples, 0.07%)</title><rect x="873.9" y="2037" width="0.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="876.87" y="2047.5" ></text>
</g>
<g >
<title>PyNumber_Index (306,997,039 samples, 0.02%)</title><rect x="128.5" y="2037" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="131.48" y="2047.5" ></text>
</g>
<g >
<title>_Py_CheckSlotResult (868,012,978 samples, 0.04%)</title><rect x="947.9" y="2053" width="0.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="950.88" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (5,863,652,597 samples, 0.29%)</title><rect x="304.8" y="1333" width="3.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1343.5" ></text>
</g>
<g >
<title>[unknown] (4,572,609,050 samples, 0.23%)</title><rect x="304.8" y="757" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="767.5" ></text>
</g>
<g >
<title>module_getattro.lto_priv.0 (415,453,294 samples, 0.02%)</title><rect x="802.1" y="2037" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="805.09" y="2047.5" ></text>
</g>
<g >
<title>write_size_t (214,559,387 samples, 0.01%)</title><rect x="347.5" y="2021" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="350.52" y="2031.5" ></text>
</g>
<g >
<title>PyUnicode_InternInPlace (487,802,562 samples, 0.02%)</title><rect x="300.4" y="2037" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="303.43" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.6 (1,512,744,107 samples, 0.08%)</title><rect x="938.4" y="2053" width="0.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="941.37" y="2063.5" ></text>
</g>
<g >
<title>gen_iternext.lto_priv.0 (8,002,286,214 samples, 0.40%)</title><rect x="975.5" y="2053" width="4.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="978.51" y="2063.5" ></text>
</g>
<g >
<title>object_dealloc.lto_priv.0 (357,437,906 samples, 0.02%)</title><rect x="1033.8" y="2053" width="0.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1036.83" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (3,610,683,086 samples, 0.18%)</title><rect x="304.8" y="53" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="63.5" ></text>
</g>
<g >
<title>pthread_getspecific@@GLIBC_2.34 (9,949,763,025 samples, 0.49%)</title><rect x="1035.1" y="2053" width="5.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1038.05" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_Malloc (1,426,028,115 samples, 0.07%)</title><rect x="584.4" y="2037" width="0.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="587.43" y="2047.5" ></text>
</g>
<g >
<title>do_richcompare (7,830,255,504 samples, 0.39%)</title><rect x="661.8" y="2037" width="4.6" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="664.84" y="2047.5" ></text>
</g>
<g >
<title>_PyObject_GC_Alloc (3,629,635,753 samples, 0.18%)</title><rect x="568.2" y="2037" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="571.17" y="2047.5" ></text>
</g>
<g >
<title>dict_dealloc.lto_priv.0 (2,444,219,094 samples, 0.12%)</title><rect x="648.9" y="2037" width="1.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="651.87" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (182,103,736 samples, 0.01%)</title><rect x="279.7" y="1973" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="282.66" y="1983.5" ></text>
</g>
<g >
<title>getset_get.lto_priv.0 (495,829,066 samples, 0.02%)</title><rect x="712.9" y="2037" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="715.86" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (267,598,027 samples, 0.01%)</title><rect x="527.5" y="1941" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.50" y="1951.5" ></text>
</g>
<g >
<title>[unknown] (5,388,704,172 samples, 0.27%)</title><rect x="304.8" y="1109" width="3.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1119.5" ></text>
</g>
<g >
<title>_PyUnicode_CheckConsistency (587,982,261 samples, 0.03%)</title><rect x="319.7" y="2021" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="322.75" y="2031.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.31 (485,764,797 samples, 0.02%)</title><rect x="938.1" y="2053" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="941.09" y="2063.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (5,027,753,930 samples, 0.25%)</title><rect x="918.7" y="2053" width="3.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="921.74" y="2063.5" ></text>
</g>
<g >
<title>free_keys_object.lto_priv.0 (1,541,901,586 samples, 0.08%)</title><rect x="690.1" y="2037" width="0.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="693.12" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (7,253,479,828 samples, 0.36%)</title><rect x="304.8" y="1925" width="4.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.76" y="1935.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.23 (455,381,445 samples, 0.02%)</title><rect x="937.8" y="2053" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="940.82" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (218,623,198 samples, 0.01%)</title><rect x="809.9" y="1877" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="812.86" y="1887.5" ></text>
</g>
<g >
<title>tupleslice (224,164,655 samples, 0.01%)</title><rect x="873.0" y="2037" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="875.99" y="2047.5" ></text>
</g>
<g >
<title>super_getattro.lto_priv.0 (3,315,542,040 samples, 0.16%)</title><rect x="1041.7" y="2053" width="2.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1044.72" y="2063.5" ></text>
</g>
<g >
<title>tupledealloc.lto_priv.0 (868,947,226 samples, 0.04%)</title><rect x="1044.8" y="2053" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1047.80" y="2063.5" ></text>
</g>
<g >
<title>validate_list (14,572,083,561 samples, 0.72%)</title><rect x="1178.5" y="2053" width="8.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1181.48" y="2063.5" ></text>
</g>
<g >
<title>[unknown] (6,198,482,742 samples, 0.31%)</title><rect x="304.8" y="1589" width="3.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="1599.5" ></text>
</g>
<g >
<title>tupleitem.lto_priv.0 (348,146,401 samples, 0.02%)</title><rect x="1163.3" y="2053" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1166.32" y="2063.5" ></text>
</g>
<g >
<title>sm_descr_get.lto_priv.0 (221,354,079 samples, 0.01%)</title><rect x="827.2" y="2037" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="830.15" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (4,554,963,302 samples, 0.23%)</title><rect x="304.8" y="741" width="2.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="307.82" y="751.5" ></text>
</g>
<g >
<title>_PyObject_VectorcallTstate.lto_priv.10 (4,025,583,646 samples, 0.20%)</title><rect x="313.8" y="2021" width="2.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="316.81" y="2031.5" ></text>
</g>
<g >
<title>float_dealloc.lto_priv.0 (1,451,144,145 samples, 0.07%)</title><rect x="669.0" y="2037" width="0.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="672.01" y="2047.5" ></text>
</g>
<g >
<title>PyGILState_Check (5,394,180,093 samples, 0.27%)</title><rect x="17.2" y="2053" width="3.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="20.20" y="2063.5" ></text>
</g>
<g >
<title>frame_alloc (3,664,420,437 samples, 0.18%)</title><rect x="674.1" y="2037" width="2.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="677.07" y="2047.5" ></text>
</g>
<g >
<title>[unknown] (186,880,749 samples, 0.01%)</title><rect x="527.5" y="1909" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="530.54" y="1919.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (173,821,310 samples, 0.01%)</title><rect x="312.7" y="2021" width="0.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="315.72" y="2031.5" ></text>
</g>
<g >
<title>_PyDict_CheckConsistency (1,365,781,868 samples, 0.07%)</title><rect x="883.3" y="2053" width="0.8" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="886.34" y="2063.5" ></text>
</g>
<g >
<title>PyObject_RichCompare (14,168,073,120 samples, 0.70%)</title><rect x="78.0" y="2053" width="8.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="81.01" y="2063.5" ></text>
</g>
<g >
<title>get_gc_state (214,682,948 samples, 0.01%)</title><rect x="343.7" y="2021" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="346.67" y="2031.5" ></text>
</g>
<g >
<title>cfunction_call.lto_priv.0 (312,316,127 samples, 0.02%)</title><rect x="965.5" y="2053" width="0.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="968.46" y="2063.5" ></text>
</g>
<g >
<title>move_unreachable (463,280,196 samples, 0.02%)</title><rect x="305.5" y="37" width="0.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="308.49" y="47.5" ></text>
</g>
<g >
<title>PyLong_FromLong (1,414,756,803 samples, 0.07%)</title><rect x="26.7" y="2053" width="0.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="29.73" y="2063.5" ></text>
</g>
<g >
<title>lookup_maybe_method.lto_priv.0 (209,015,728 samples, 0.01%)</title><rect x="344.1" y="2021" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="347.15" y="2031.5" ></text>
</g>
</g>
</svg>
